name: Release Obsidian plugin

on:
  push:
    tags:
      - "*"

permissions:
  contents: write
  issues: write    # Release 노트 작성을 위해
  pull-requests: write  # Release 관련 PR 필요시

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Cache pnpm modules
        id: pnpm-cache # use this to check for `cache-hit` ==> if: steps.pnpm-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Build plugin
        run: pnpm run build
        continue-on-error: false

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="${GITHUB_REF#refs/tags/}"
          git log "$(git describe --tags --abbrev=0)"..HEAD --oneline > release-notes.md
    
          # 파일 존재 확인
          files=("manifest.json" "main.js" "styles.css")
          for file in "${files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "Error: 빌드 결과물 '$file'을 찾을 수 없습니다. 빌드 단계가 성공적으로 완료되었는지 확인해주세요."
              exit 1
            fi
          done
    
          gh release create "$tag" \
            --title="Release $tag" \
            --notes-file="release-notes.md" \
            manifest.json build/main.js build/styles.css
